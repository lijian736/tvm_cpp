find_package(Protobuf 3 REQUIRED)
include_directories(${Protobuf_INCLUDE_DIRS})

#add include folder
include_directories("${CMAKE_SOURCE_DIR}/third_party/onnx_proto")
include_directories("${CMAKE_SOURCE_DIR}/third_party/tvm/include")
include_directories("${CMAKE_SOURCE_DIR}/source")

include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/third_party/tvm/3rdparty/dlpack/include")
include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/third_party/tvm/3rdparty/dmlc-core/include")
include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/third_party/tvm/3rdparty/rang/include")
include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/third_party/tvm/3rdparty/compiler-rt")
include_directories(SYSTEM "${CMAKE_SOURCE_DIR}/third_party/tvm/3rdparty/picojson")

aux_source_directory(./utils AUX_SRC_LIST)
aux_source_directory(./onnx_op AUX_OP_LIST)
aux_source_directory(./onnx_op/ops AUX_ONNX_OPS_LIST)

find_library(TVM_LIBRARY         NAMES tvm         PATHS ${CMAKE_SOURCE_DIR}/third_party/tvm/build/ PATH_SUFFIXES lib)
find_library(TVM_RUNTIME_LIBRARY NAMES tvm_runtime PATHS ${CMAKE_SOURCE_DIR}/third_party/tvm/build/ PATH_SUFFIXES lib)

# the utils lib name
set(UTILS_NAME utils)

add_library(${UTILS_NAME} SHARED ${AUX_SRC_LIST} ${AUX_OP_LIST} ${AUX_ONNX_OPS_LIST})
target_link_libraries(${UTILS_NAME} PRIVATE ${Protobuf_LIBRARIES} ${TVM_LIBRARY})
target_compile_definitions(${UTILS_NAME} PRIVATE DMLC_USE_LOGGING_LIBRARY=<tvm/runtime/logging.h>)

function(GENERATE_EXECUTABLE name)
    add_executable(${name} ${name}.cpp ${CMAKE_SOURCE_DIR}/third_party/onnx_proto/onnx.proto3.pb.cc)
    target_link_libraries(${name} PRIVATE ${Protobuf_LIBRARIES} ${TVM_LIBRARY} ${UTILS_NAME})
    target_compile_definitions(${name} PRIVATE DMLC_USE_LOGGING_LIBRARY=<tvm/runtime/logging.h>)
endfunction()

GENERATE_EXECUTABLE(test_onnx)
GENERATE_EXECUTABLE(test_tvm_01_hello_world)
GENERATE_EXECUTABLE(test_tvm_02_ndarray)
GENERATE_EXECUTABLE(test_tvm_03_relay)
GENERATE_EXECUTABLE(test_tvm_04_relay_constant)
GENERATE_EXECUTABLE(test_tvm_05_relay_var)
GENERATE_EXECUTABLE(test_tvm_06_relay_type_infer)
GENERATE_EXECUTABLE(test_tvm_07_relay_conv2d)
GENERATE_EXECUTABLE(test_tvm_08_relay_relu)
GENERATE_EXECUTABLE(test_tvm_09_relay_add)
GENERATE_EXECUTABLE(test_tvm_10_relay_concat)
GENERATE_EXECUTABLE(test_tvm_11_relay_max_pool2d)
GENERATE_EXECUTABLE(test_tvm_12_relay_dynamic_type)
GENERATE_EXECUTABLE(test_tvm_13_relay_cast)
GENERATE_EXECUTABLE(test_tvm_14_relay_elementwise_mul)
GENERATE_EXECUTABLE(test_tvm_15_relay_strided_slice)
GENERATE_EXECUTABLE(test_tvm_16_relay_fold_const)
GENERATE_EXECUTABLE(test_tvm_17_relay_resize2d)
GENERATE_EXECUTABLE(test_tvm_18_relay_reshape)
GENERATE_EXECUTABLE(test_tvm_19_relay_transpose)
GENERATE_EXECUTABLE(test_tvm_20_relay_print)
GENERATE_EXECUTABLE(test_tvm_21_relay_shape_of)